<?php

/**
 * @file
 * Module for dynamic display of Moodle course memberships.
 * 
 * Note: Drupal username and Moodle username must be identical.
 */

/**
 * Query Moodle database for courses a user belongs to.
 *
 * @param string $username
 *   Drupal/Moodle user name.
 *
 * @return array
 *   Array of data about each course.
 */
function moodle_courselist_incategory_get_courselist($username) {

  $moodle_con = moodle_connector_connect();
  if (!$moodle_con) {
    return array();
  }

  // Get Moodle user id.
  $moodle_user_id = $moodle_con->query("SELECT id FROM {user} WHERE username = :username", array(
    ':username' => $username,
  ))->fetchField();

  // Exit if user is not available in Moodle.
  if (!$moodle_user_id) {
    return array();
  }

  // Moodle context. 50 = course.
  $moodle_context_level = 50;

  $query = "SELECT {course}.id, {course}.fullname, {course}.category
            FROM {course}
              INNER JOIN {context} ON {course}.id = {context}.instanceid
                AND {context}.contextlevel = :contextlevel
              INNER JOIN {role_assignments} ON {context}.id = {role_assignments}.contextid
              INNER JOIN {role} ON {role_assignments}.roleid = {role}.id
              INNER JOIN {user} ON {role_assignments}.userid = {user}.id
            WHERE {user}.id = :userid";

  $res = $moodle_con->query($query, array(
    ':contextlevel' => $moodle_context_level,
    ':userid'       => $moodle_user_id,
  ));
  if (!$res) {
    return array();
  }
  return $res->fetchAll();
}

/**
 * Implements hook_block_info().
 */
function moodle_courselist_incategory_block_info() {
  $blocks['moodle'] = array(
    'info' => t('Moodle Courses'),
  );
  return $blocks;
}

/**
 * Implements hook_permission().
 */
function moodle_courselist_incategory_permission() {
  return array('view moodle courselist' => array(
    'title' => t('View Moodle course list'),
    'description' => t('View the courses of a remote Moodle installation'),
  ));
}

/**
 * Sanitize an array of course data and transform IDs to URLs.
 *
 * @param array $courses
 *   Array of courses.
 *
 * @return array
 *   Array of links to courses.
 */
function moodle_courselist_incategory_make_links($courses) {
  $url_to_moodle = variable_get('moodle_connector_url');
  $courses_array = array();
  if ($url_to_moodle) {
    foreach ($courses as $c) {
      $url = $url_to_moodle . "/course/view.php?id=" . $c->id;
      $courses_array[] = "<a href=\"$url\">".$c->fullname.'</a>';
      //$courses_array[] = l($c->fullname, $url);
    }
  }
  return $courses_array;
}

/**
 * Implements hook_block_view().
 */
function moodle_courselist_incategory_block_view($delta = '') {

  if (!user_access('view moodle courselist')) {
    return;
  }
  global $user;
	$blocks['subject'] = t('Moodle Courses');

	$courselist = moodle_courselist_incategory_get_courselist($user->name);//print_r($courselist);die;

  $moodle_con = moodle_connector_connect();
  if (!$moodle_con) {
		$blocks['content'] = '';
		return $blocks;
  }

	$query = "SELECT * from {course_categories}";
	$res = $moodle_con->query($query);
	if (!$res) {
		$blocks['content'] = '';
		return $blocks;
	}
	$ccs = $res->fetchAll();

	$output = '';
	foreach($ccs as $cc){
		$courses2 = array();
		foreach($courselist as $c){
			if($c->category == $cc->id)$courses2[] = $c;
		}//print_r($courses2);die;
	  $courses = moodle_courselist_incategory_make_links($courses2);
	  $output  .= '<h3>'.$cc->name.'</h3>'; ///course/category.php?id=
	  $output  .= '<div class="moodle_courselist-courses">';
	  $output .= theme('item_list', array(
		'items' => $courses,
		'type'  => 'ul',
	  ));
	  $output .= '</div>';
	}

	  $blocks['content'] = $output;

	  return $blocks;
}
